apply plugin: 'kotlin'
apply plugin: 'groovy'
apply plugin: 'war'

apply plugin: 'liquibase'

wicketVersion = '1.5.3'

buildscript {
    def jooqVersion = '3.3.2'
    ext.libraries = [
            dbDriver: 'org.postgresql:postgresql:9.3-1101-jdbc41',
            kotlin: 'org.jetbrains.kotlin:kotlin-gradle-plugin:0.7.271',
            jooq: "org.jooq:jooq:$jooqVersion",
            jooqCodeGen: "org.jooq:jooq-codegen:$jooqVersion"
    ]
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath libraries.kotlin,
                libraries.dbDriver,
                libraries.jooq,
                'com.augusttechgroup:gradle-liquibase-plugin:0.7'
    }
}

repositories {
    mavenCentral()
}

configurations { jooqCodeGenerator }

dependencies {
    compile libraries.kotlin,
            libraries.jooq,
            'org.liquibase:liquibase-core:3.1.1',
            'org.postgresql:postgresql:9.3-1101-jdbc41',
    		'org.apache.httpcomponents:httpclient:4.0-alpha4',
    		'com.google.code.gson:gson:1.7.2',
    		'org.apache.commons:commons-io:1.3.2',
    		'org.codehaus.jackson:jackson-mapper-asl:1.8.5',
            'org.eclipse.jgit:org.eclipse.jgit.java7:3.3.2.201404171909-r',
            'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1'








    compile group: 'org.apache.wicket', name: 'wicket', version: wicketVersion
    compile group: 'org.apache.wicket', name: 'wicket-extensions', version: wicketVersion


    jooqCodeGenerator libraries.jooqCodeGen,
            libraries.dbDriver
}

sourceSets {
    generated {
        java {
            srcDirs = [ 'src/generated/java' ]
        }
    }
}

liquibase {
    changelogs {
        main {
            file = file('src/main/resources/db/db-change-logs.xml')
        }
    }

    databases {
        sandbox {
            url = 'jdbc:postgresql://localhost:5432/hds'
            username = 'hds'
            password = 'hds'
        }
    }

    defaultDatabase = databases.sandbox
}

task generateJooq(type: JavaExec) {

    group = 'DB'
    workingDir = projectDir
    main = 'org.jooq.util.GenerationTool'
    classpath = configurations.jooqCodeGenerator + files(workingDir.toString() + "/config")
    args = ['/jooq.xml']
}

generateJooq.dependsOn(update)